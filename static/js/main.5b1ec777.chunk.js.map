{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","page","active","handleChangePage","items","App","useState","setCurrentPage","itemsPerPage","setitemsPerPage","totalItems","length","firstDisplayItem","lastDisplayItem","visibleItems","slice","id","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAoBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA1Be,WAChBN,GACHL,EAAaD,EAAc,IAmBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YAAa,CAAEM,OAAQD,IAASd,IADxD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA7BM,SAACE,GACpBA,IAASd,GACXC,EAAaa,GA2BQE,CAAiBF,IAJlC,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YAAa,CAAEC,SAAUH,IAAnD,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAhDe,WAChBL,GACHN,EAAaD,EAAc,IAyCzB,wBCjEFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAaN,EAAMO,OACnBC,EAAmBzB,EAAcqB,EAAeA,EAAe,EAC/DK,EAAkB1B,EAAcqB,EAAeE,EACjDA,EACAvB,EAAcqB,EAEZM,EAAeV,EAAMW,MAAMH,EAAmB,EAAGC,GAOvD,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCyB,EADjC,cACuDC,EADvD,eAC6EH,EAD7E,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,SAAU,SAACC,GAAD,OAnBK,SAACA,GACxBT,GAAiBS,EAAMC,OAAOC,OAC9Bb,EAAe,GAiBcJ,CAAiBe,IACtCE,MAAOZ,EALT,UAOE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOyB,EACPxB,QAASsB,EACTrB,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAUM,EAAeN,MAGzC,6BACGa,EAAad,KAAI,SAAAsB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5D1DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5b1ec777.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n\n  const handlePrevPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handleChangePage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handleChangePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(5);\n\n  const totalItems = items.length;\n  const firstDisplayItem = currentPage * itemsPerPage - itemsPerPage + 1;\n  const lastDisplayItem = currentPage * itemsPerPage > totalItems\n    ? totalItems\n    : currentPage * itemsPerPage;\n\n  const visibleItems = items.slice(firstDisplayItem - 1, lastDisplayItem);\n\n  const handleChangePage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setitemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstDisplayItem} - ${lastDisplayItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => handleChangePage(event)}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}